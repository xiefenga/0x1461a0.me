{"pageProps":{"metaTitle":"常用插件","article":{"title":"常用插件","content":"## 内置插件\n\n所有的 webpack 内置插件都作为 webpack 的静态属性存在\n\n```javascript\nconst webpack = require(\"webpack\")\n\nnew webpack.插件名(options)\n```\n\n### DefinePlugin\n\n全局常量定义插件，当 webpack 编译完成后，会自动将源码中的变量替换为常量值\n\n```javascript\nnew webpack.DefinePlugin({\n\t'process.env.NODE_ENV': 'development'\n})\n```\n\n### BannerPlugin\n\n可以为每个 chunk 生成的文件头部添加一行注释\n\n```javascript\nnew webpack.BannerPlugin({\n  banner: `\nauth: xiefeng\ntime: ${new Date().toLocaleDateString()}`\n})\n```\n\n### ProvidePlugin\n\n自动加载模块，不再需要 import 或 require \n\n```javascript\nnew webpack.ProvidePlugin({\n  $: 'jquery',\n  _: 'lodash'\n})\n```\n\n## html-webpack-plugin\n\n- 不配置任何选项会默认将 `entry` 配置中所有入口 thunk 和 `extract-text-webpack-plugin` 抽取的 css 都插入到文件中\n- 该插件一个实例生成一个html文件，多页应用需要实例化该插件多次\n- html模板文件中支持模板引擎语法来获取该配置项值：` <title> <%= htmlWebpackPlugin.options.title %> </title>`\n\n## clean-webpack-plugin\n\n在构建过程中清除 webpack 打包目录下的文件，默认清除所有\n\n## copy-webpack-plugin\n\n用来复制一个单独的文件或者整个目录到新建的文件夹下\n\n```javascript\nnew CopyPlugin([\n  { from: \"./public\", to: \"./\" }\n])\n```\n\n## file-loader\n\n生成依赖的文件到输出目录，然后将模块文件的到处设置为文件的相对路径\n\n```javascript\n//file-loader\nfunction loader(source){\n  // source：文件内容\n  // 1. 生成一个具有相同文件内容的文件到输出目录\n  // 2. 返回一段代码   export default \"文件名\"\n}\n```\n\n## url-loader\n\n将依赖的文件转换为：导出一个base64格式的字符串\n\n```javascript\n//file-loader\nfunction loader(source){\n  // source：文件内容\n  // 1. 根据buffer生成一个base64编码\n  // 2. 返回一段代码   export default \"base64编码\"\n}\n```\n\n## 路径问题\n\n在使用 file-loader 或 url-loader 时，可能会遇到一个路径相关的非常有趣的问题\n\n比如，通过 webpack 打包产生这样的目录结构：\n\n```yml\ndist\n    |—— img\n        |—— a.png  #file-loader生成的文件\n    |—— scripts\n        |—— main.js  #export default \"img/a.png\"\n    |—— html\n        |—— index.html #<script src=\"../scripts/main.js\" ></script>\n```\n\n这种问题发生的根本原因：产生路径时 loader 或 plugin 只有相对于 dist 目录的路径\n\n这个问题需要依靠 webpack 的 publicPath 配置项解决","meta":{"size":2606,"birthTime":1663496641402.9795,"updateTime":1663496641403.1055}}},"__N_SSG":true}