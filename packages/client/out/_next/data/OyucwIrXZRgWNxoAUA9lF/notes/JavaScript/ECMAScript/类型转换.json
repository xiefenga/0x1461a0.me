{"pageProps":{"metaTitle":"类型转换","article":{"title":"类型转换","content":"## NaN\n\nNaN 是一个特殊的值，意味着不是数值，用于表示本来要返回数值的操作失败了。\n\n```javascript\nconsole.log(0/0)\t\t// NaN \n```\n\n任何涉及到 NaN 的操作返回值都是 NaN，并且：\n\n```javascript\nNaN == NaN\t\t// false\n```\n\n`isNaN` 用于判断参数是否不是一个数值，该函数会尝试对参数调用 `Number` 将它转换为数值，任何不能转换为数值的值都会导致这个函数返回 `true`\n\n```javascript\nisNaN(NaN)\t\t// true \nisNaN(10)\t\t\t// false，10 是数值\nisNaN(\"10\") \t// false，可以转换为数值 10 \nisNaN(\"blue\") // true，不可以转换为数值\nisNaN(true)\t\t// false，可以转换为数值 1\n```\n\n`Number.isNaN()` 不会自行将参数转换成数字，只有在参数是值为 `NaN` 时，才会返回 `true`\n\n```javascript\nNumber.isNaN(NaN);        // true\nNumber.isNaN(\"blabla\");   // false\n```\n\nPolyfill：\n\n```javascript\nNumber.isNaN = Number.isNaN ?? (value) => typeof value === \"number\" && isNaN(value)\n```\n\n## Number\n\n`Number()` 函数转换规则：\n\n- 布尔值：true 转换为 1，false 转换为 0\n- 数值，直接返回\n- null 返回 0，undefined 返回 NaN\n- 字符串：\n  1. 先 `trim` 再忽略前导的 0\n  2. 空串返回 0\n  3. 有符号十进制数，返回该十进制数\n  4. 有效的十六进制数（如 `0xf` ）返回与该十六进制值对应的十进制整数值\n  5. 包含除其他字符返回 NaN\n- 调用 `valueOf` 方法，并按照规则转换，如果转换结果是 NaN，则调用 `toString` 方法，再按照转换字符串的规则转换\n\n## parseInt\n\n`parseInt` 函数更专注于字符串是否包含数值模式\n\n1. 忽略字符串最前面的空格\n2. 如果第一个字符不是数值字符、加号或减号返回 `NaN`，=> 空串返回 `NaN`\n3. 依次检测每个字符，直到字符串末尾，或碰到非数值字符\n4. 第二个参数用于指定底数，表明要解析的值的进制\n\n```javascript\nparseInt('')  // NaN\nparseInt('1234blue')\t// 1234\nparseInt(’0xAF‘, 16)  // 175 \n```\n\n## 操作符\n\n### ++/--\n\n-  对于字符串：\n  - 如果是有效的数值形式，则转换为数值再应用改变\n  - 如果不是有效的数值形式，则将变量的值设置为 NaN \n  - 变量类型从字符串变成数值\n- 对于布尔值：\n  - 如果是 false，则转换为 0 再应用改变\n  - 如果是 true，则转换为 1 再应用改变\n  - 变量类型从布尔值变成数值\n-  对于浮点值，加 1 或减 1\n- 如果是对象：\n  - 调用 `valueOf` 方法得到的值应用上述规则\n  - 如果是 `NaN`，则调用 `toString` 并再次应用其他规则\n  - 变量类型从对象变成数值\n\n### 乘法\n\n- 操作数都是数值，则执行常规的乘法运算\n- 有任一操作数是 NaN，返回 NaN\n-  Infinity 乘以 0，则返回 NaN\n- Infinity 乘以非 0 的有限数值，则根据第二个操作数的符号返回 Infinity 或-Infinity\n- Infinity 乘以 Infinity，则返回 Infinity\n- 有不是数值的操作数，先在后台调用 `Number()` 将其转为数字再应用上述规则\n\n### 除法\n\n- 操作数都是数值，执行常规的除法运算\n- 有任一操作数是 NaN，返回 NaN\n- Infinity 除以 Infinity，返回 NaN\n- 0 除以 0，返回 NaN\n- 非 0 的有限值除以 0，根据第一个操作数的符号返回 Infinity 或-Infinity\n- Infinity 除以任何数值，根据第二个操作数的符号返回 Infinity 或 -Infinity\n- 有不是数值的操作数，先在后台用 `Number()` 将其转为数字再应用上述规则\n\n### 取模\n\n- 操作数都是数值，执行常规除法运算，返回余数\n- 被除数是无限值，除数是有限值，则返回 NaN\n- 被除数是有限值，除数是 0，则返回 NaN\n- Infinity 除以 Infinity，返回 NaN\n- 被除数是有限值，除数是无限值，返回被除数\n- 被除数是 0，除数不是 0，则返回 0\n- 有不是数值的操作数，先在后台用 `Number()` 将其转为数字再应用上述规则\n","meta":{"size":3962,"birthTime":1663496641394.11,"updateTime":1663496641394.2334}}},"__N_SSG":true}