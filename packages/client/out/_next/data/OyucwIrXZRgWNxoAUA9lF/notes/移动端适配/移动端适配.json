{"pageProps":{"metaTitle":"移动端适配","article":{"title":"移动端适配","content":"## 视口设置\r\n\r\n通过 `meta` 元素可以设置视口的大小和缩放，viewport 有以下属性可以进行设置：\r\n\r\n|      属性       | 描述                                                         |\r\n| :-------------: | :----------------------------------------------------------- |\r\n|     `width`     | 设置布局视口的宽度，`device-width` 为设备屏幕宽度的逻辑像素  |\r\n|    `height`     | 设置布局视口的高度，`device-height` 为设备屏幕高度的逻辑像素 |\r\n| `initial-scale` | 设置页面的初始缩放值，为一个数字，可以带小数                 |\r\n| `user-scalable` | 是否允许用户进行缩放，值为 `no` 或 `yes`                     |\r\n| `minimum-scale` | 允许用户的最小缩放值，为一个数字，可以带小数                 |\r\n| `maximum-scale` | 允许用户的最大缩放值，为一个数字，可以带小数                 |\r\n\r\n## viewport缩放\r\n\r\nviewport缩放适配的目的是让 `1px` 在所有的设备上一致，可以直接通过 `px` 来设置样式。\r\n\r\n1. 首先让 viewport 的 `width=device-width`\r\n2. 通过 js 获取此时 `device-width` 对应的 CSS 像素\r\n3. 再根据公式 缩放比 = device-width / viewport，设置缩放比来改变 viewport 的宽度\r\n4. 一般将 viewport 的宽度设为 375，iPhone6 的宽度\r\n\r\n```javascript\r\n(function(){\r\n  //获取 viewport 宽度（此时 viewport 没有缩放）\r\n  const curWidth = document.documentElement.clientWidth\r\n  const targetWidth = 375\r\n  const scale = curWidth / targetWidth\r\n  document.getElementById('meta[name=\"viewport\"]')\r\n    .content=`initial-scale=${scale},user-scalable=no,minimum-scale=${scale},maximum-scale=${scale}`\r\n})();\r\n```\r\n\r\n## DPR缩放\r\n\r\nDPR缩放适配的目的是让一个CSS像素对应应一个设备像素。\r\n\r\n1. 获取设备的 DPR\r\n2. 将 DPR 设为缩放比\r\n\r\n```javascript\r\n(function(){\r\n  const scale = 1 / window.devicePixelRatio\r\n  document.querySelector('meta[name=\"viewport\"]')\r\n    .content=`initial-scale=${scale},user-scalable=no,minimum-scale=${scale},maximum-scale=${scale}`\r\n})();\r\n```\r\n\r\n","meta":{"size":2119,"birthTime":1663496641435.7651,"updateTime":1663496641436.117}}},"__N_SSG":true}