{"pageProps":{"metaTitle":"jquery","article":{"title":"jquery","content":"# $\n\n- css选择器\n\n- jQuery独有的选择器\n\n- `null`、`undefined`\n\n- `dom`\n\n- `function`\n\n  `$(function(){}) == $(document).ready(function() {}) ` 使用的是 `DOMContentLoaded` 事件\n\n- `selector, context` \n\n  将选择的选择的元素范围限定在 `context` 的范围内\n  \n- jQuery 对象\n\n  这个对象的一个克隆对象将被创建，这个新的jQuery对象引用同一DOM元素。\n\n# 元素的基本操作\n\n## 元素的遍历和筛选\n\n- `get()` \t返回原生的dom对象，不传参数返回由全部dom组成的数组\n- `eq()`     返回jQuery对象，不传参返回空对象\n- `find()`     返回该元素的**后代元素**中符合条件的，可传入selector、dom、jQuery对象\n- `filter()`    返回元素中符合条件元素，可传入selector、dom、jQuery对象、`function(index, ele)`\n- `not()`    和 `filter()` 相反，将不符合条件的元素选择出来\n- `has()`    返回有符合条件的后代元素的元素\n- `is()`    返回该对象和参数中匹配的是否有交集，（前面的元素有没有后面的元素）\n- `add()`    添加元素到匹配的元素集合中一起操作\n- `end()`    回退到上一步\n\n## 取赋值操作\n\n- `html()`    读取只读取元素集合中的第一个，赋值全部都赋值，可传 字符串、函数\n- `text()`    读写匹配元素集合中每个元素的文本内容，可传 字符串、函数\n- `val()`    读写表单元素的 `value` 值，可传入 字符串、函数\n- `size()`    返回某个集合中元素的数量 `== xx.length`\n\n### css操作\n\n- `addClass()`    为匹配的所有元素添加类名（可多个），可传 字符串、函数\n\n- `removeClass()`    移除匹配的元素上一个、多个或全部样式（不传参），可传 字符串、函数\n\n- `hasClass()`    确定任何一个匹配元素**是否有**被分配给定的类\n\n- `css()` 读写CSS属性\n\n  读取传入字符串、字符串数组\n\n  写入传入 属性名+值、属性名+函数、对象\n\n## 属性操作\n\n- `attr()`   读写属性，对于没写就是 `undefined`，对于特性不好用\n- `prop()`   读写特性\n- `data()`    在匹配元素上存储任意相关数据（存储在jQuery对象中，而不是dom上，但有映射），可读第一个匹配的元素的相关数据或行间的 `data-xxx` 的数据\n\n## 增删改查操作\n\n1. 创建\n\n   - `$(标签字符串)`  创建jQuery对象\n\n   - `clone()`  \n\n     深度克隆（包括行间样式和内容），可传入 `true` 也克隆事件和数据（通过 `data()` 添加的）\n\n     传入两个 `true` 数据中的引用值类型也会被深度克隆\n\n2. 查找\n\n   - `next()` 、`prev()`\n\n     返回后 / 前一个兄弟元素，可以传入选择器参数进行限定\n\n   - `nextAll()`、`prevAll()`\n\n     返回后面 / 前面所有兄弟元素，可以传入选择器参数进行筛选\n\n   - `nextUntil()`、`prevUntil()`\n\n     返回后面 / 前面的兄弟元素，第一个参数用来限定到哪截至，第二个参数用来筛选元素\n\n   - `siblings()`\n\n     返回该元素的所有兄弟元素，可以传参进行筛选\n\n   - `parent()`\n\n     获取该元素的父元素，可传参进行筛选\n\n   - `parents()`\n\n     返回该元素的所有祖先元素，可传参进行筛选\n\n   - `offsetParent()`    \n\n     最近的有定位的父级\n\n   - `closest()`\n\n     从元素**本身**开始，逐级向父元素匹配，并返回最先匹配的祖先元素，可以传参进行限定\n     \n   - `children()`   \n\n     返回所有的子元素，可传参进行筛选\n\n   - `slice()`\n\n     根据指定的下标范围，过滤匹配的元素集合，并生成一个新的 jQuery 对象\n\n3. 插入\n\n   - `insertAfter()`、`insertBefore()`、`appendTo()`、`prependTo()`\n\n     在目标元素之后插入，可传入selector、dom、jQuery\n\n   - `after()`、`before()`、`append()`、`prepend()`\n\n     目标元素在该元素之前，对于添加元素需要传入dom或jQuery\n     \n   - `wrap()`    给每个元素添加父级，对于已有的dom是克隆操作\n\n   - `wrapInner()`    给该元素的直接子元素们添加一个父级\n\n   - `wrapAll()`    给匹配的元素集合一起添加一个父级\n\n   - `unWrap()`    将匹配元素集合的父级元素删除\n\n4. 删除\n\n   - `remove()`、`detach()`\n\n     相同点：都会返回被删除的对象\n\n     区别：`remove()` 会将事件等数据一并移除，`detach()` 不会（再次添加被删除的对象）\n\n# 事件\n\n- `on(events [, selector ] [, data ], handler(e))` \n\n\t`selector` 参数可以用来模拟事件委托，事件绑定在父级身上，但是只有在事件源对象为`selector`时才触发\n\n\t`data` 的内容会在 `e.data` 中\n\n\t`on` 可以绑定多个事件处理函数（甚至一个函数多次），可以绑定自定义事件\n\n\t对于多个事件的绑定可以：\n\n\t```javascript\n\t$('.demo').on({\n\t    click: function () {\n\t        console.log('click');\n\t    },\n\t    mouseenter: function () {\n\t        console.log('mouseenter');\n\t    },\n\t    mouseleave: function () {\n\t        console.log('mouseleave');\n\t    }\n\t});\n\t```\n\n- `one()`\n\n\t和 `on` 相同，只不过事件只发生一次\n\n- `hover()`    用来绑定鼠标移入移出事件的函数 `== on ('mouseenter').on('mouseleave')`\n\n\t参数` handlerIn(eventObject), handlerOut(eventObject)` 两个函数分别对应移入、移出；\n\n\t当两个函数为一个时，可以只传入一个\n\n- `off()`\n\n\t不传参，取消所有事件的所有处理函数；传类型，取消该事件类型的所有处理函数\n\n\t其他情况，绑定怎么写取消怎么写（参数）\n\n- `trigger(eventType [, extraParameters])`\n\n# 动画\n\n- `show()`、`hide()`、`toggle()`\n\n\t显示、隐藏匹配的元素，过渡的是 `width` `height` `opacity` `padding` `margin` 这几个属性\n\n\t可传参数 `[duration ] [, easing ] [, complete ]` ；\n\n\t对于 `easing` jQuery自身提供`linear` 和 `swing`，其他效果可以使用[jQuery Easing Plugin](http://gsgd.co.uk/sandbox/jquery/easing/)插件\n\n- `fadeIn()`、`fadeout ()`、`fadeToggle()`\n\n\t通过淡入淡出的方式显示、隐藏匹配元素，过渡的只有 `opacity` 属性\n\n\t可传参数 `[duration ] [, easing ] [, complete ]` ；\n\n- `fadeTo()`\n\n\t调整匹配元素的透明度（淡入淡出到指定的 `opacity`）\n\n\t参数为 `duration, opacity [, easing ] [, complete ]` \n\n- `slideDown()`、`slideUp()`、`slideToggle()`\n\n\t用滑动动画显示、隐藏一个匹配元素，过渡的是 `height` 属性\n\n\t参数：`[duration ] [, easing ] [, complete ]`\n\n- `animate()`\n\n\t根据一组 CSS 属性，执行自定义动画\n\n\t参数为 `properties [, duration ] [, easing ] [, complete ]` ，第一个参数为CSS属性对象\n\n- `stop()`\n\n\t参数 `[clearQueue ] [, jumpToEnd ]` \n\n\t无参，取消当前动画开始下一个动画；\n\n\t一个参数 `true` 取消以列队动画；\n\n\t两个 `true` ，取消队列动画并直接到最终的状态\n\n- `finish()`\n\n\t停止当前正在运行的动画，删除所有排队的动画，并直接到最终状态\n\n- `delay(duration)`\n\n\t设置一个延时来推迟执行队列中后续的项（动画）\n\n# 位置大小\n\n- `offset()`    返回一个对象，包含距离**文档**的位置 `{left right}`\n- `position()`    返回相对于最近**有定位的父级**\n- `scrollLeft()` 、`scrollTop()`    获取 / 设置匹配的元素集合中第一个元素的当前**滚动条的位置**\n- `width()`、`height()`    获取 / 设置匹配的元素集合中第一个元素的当前**内容区**的宽高\n- `innerWidth()`、`innerHeight()`    获取元素的**填充区**的宽高\n- `outerWidth()`、`outerHeight()`    获取元素的**边框盒**的宽高，传入参数 `true` 可以加上 `margin`\n\n**遍历索引**\n\n`each()`    遍历一个jQuery对象，为每个匹配元素执行一个函数\n\n`index()`\n\n- 如果不传递任何参数，则返回值就是jQuery对象中第一个元素相对于它同辈元素的位置\n\n- 如果在一组元素上调用并且参数是一个DOM / jQuery对象，返回值就是传入的元素相对于原先集合的位置\n\n- 如果参数是一个选择器，返回值就是原先元素相对于选择器匹配元素的位置，找不到返回 -1\n\n# 工具方法\n\n- `$.type()`    判断数据类型\n- `$.trim()`    消除字符串头尾空格\n- `$.proxy()`   改变 `this` 指向，类似于 `bind` ，`function, context [, additionalArguments ]`\n- `$.noConfict()`   防止 `$` 冲突\n- `$.parseJSON()`    将严格 `json` 字符串转换成对象\n- `$.each()`    给传进来的数组/对象遍历\n- `$.makeArray()`    类数组转数组\n\n**插件扩展**\n\n- `$.extend()`、`$.fn.extend()`\n\t1. 可以实现方法的扩展，一个为工具方法，一个为实例方法\n\t2. 可以实现克隆，深度克隆\n\n# 异步\n\n- `$.ajax()`\n\n\t`url`、`type`、`data`、`dataType`、`success`\n\n- `$.Callbacks(flags)`\n\n\t`flags`  ：  `once`   、`memory` 、`unique` 、`stopOnFalse`\n\n\t`cb.add()`    可以添加回调函数\n\n\t`cb.fire()`    执行回调函数\n\n- `$.Deferred()`\n\n\t`df.done()`    绑定延迟对象解决时的回调函数；`df.resolve(args)`   完成成功的回调\n\n\t`df.fail()`    绑定延迟对象失败时的回调函数；`df.reject(args)`   完成失败的回调\n\n\t`df.progress()`    绑定延迟对象进行时的回调函数；`df.notify(args)`   完成进行时的回调\n\n\t成功和失败的回调只执行一次\n\n\t`df.promise()`    返回延迟的承诺对象\n\n\t`df.then()`    参数为 `doneFilter [, failFilter ] [, progressFilter ]`   \n\n\t​\t 方法返回一个承诺对象，多次调用，前一个回调函数的返回值为新的同类型的回调函数的参数\n\n- `$.when(deferreds)`\n\n\t传入一个或多个延迟对象，返回一个promise对象，当这些延迟对象都解决触发后面注册的成功的回调，一个失败全都失败\n\n\t\n\n","meta":{"size":9830,"birthTime":1663496641421.0083,"updateTime":1663496641421.1414}}},"__N_SSG":true}